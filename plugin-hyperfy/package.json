{
  "name": "@elizaos/plugin-hyperfy",
  "description": "Connect ElizaOS agents to 3D Hyperfy worlds",
  "version": "1.0.6",
  "type": "module",
  "private": true,
  "main": "dist/index.js",
  "module": "dist/index.js",
  "types": "dist/index.d.ts",
  "packageType": "plugin",
  "platform": "node",
  "license": "UNLICENSED",
  "author": "${GITHUB_USERNAME}",
  "keywords": [
    "plugin",
    "elizaos"
  ],
  "repository": {
    "type": "git",
    "url": "${REPO_URL}"
  },
  "homepage": "https://elizaos.ai",
  "bugs": {
    "url": "https://github.com/elizaos/elizaos/issues"
  },
  "exports": {
    "./package.json": "./package.json",
    ".": {
      "import": {
        "types": "./dist/index.d.ts",
        "default": "./dist/index.js"
      }
    }
  },
  "files": [
    "dist",
    "README.md",
    ".npmignore",
    "package.json",
    "tsup.config.ts"
  ],
  "dependencies": {
    "@elizaos/core": "workspace:*",
    "@elizaos/hyperfy": "workspace:*",
    "@elizaos/plugin-bootstrap": "1.0.12",
    "@elizaos/plugin-openai": "1.0.6",
    "@tanstack/react-query": "^5.80.7",
    "@types/lodash-es": "^4.17.12",
    "clsx": "^2.1.1",
    "lodash-es": "^4.17.21",
    "moment": "^2.30.1",
    "puppeteer": "^23.11.1",
    "ses": "^1.10.0",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^4.1.10",
    "three": "0.170.0",
    "uuid": "^11.1.0",
    "vite": "^6.3.5",
    "zod": "^3.25.67"
  },
  "peerDependencies": {},
  "devDependencies": {
    "@cypress/react": "^9.0.1",
    "@elizaos/cli": "^1.0.0",
    "@tailwindcss/vite": "^4.1.10",
    "@testing-library/cypress": "^10.0.3",
    "@testing-library/jest-dom": "^6.1.5",
    "@testing-library/react": "^14.1.2",
    "@testing-library/user-event": "^14.5.1",
    "@types/bun": "1.2.17",
    "@types/jest": "^29.5.11",
    "@types/node": "^20.10.5",
    "@types/react": "^18.2.45",
    "@types/react-dom": "^18.2.18",
    "@vitejs/plugin-react-swc": "^3.10.2",
    "@vitest/coverage-v8": "^1.1.0",
    "@vitest/ui": "^1.1.0",
    "chalk": "^5.3.0",
    "cross-env": "^7.0.3",
    "cypress": "^14.5.0",
    "dotenv": "16.4.5",
    "jsdom": "^23.0.1",
    "k6": "^0.48.0",
    "nodemon": "^3.0.2",
    "prettier": "3.5.3",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "rimraf": "^5.0.5",
    "tailwindcss-animate": "^1.0.7",
    "tsx": "^4.7.0",
    "typescript": "5.8.3",
    "vitest": "^1.1.0"
  },
  "scripts": {
    "start": "npm run minigames",
    "build": "bun run build.ts",
    "build:hyperfy": "node scripts/build-hyperfy.js",
    "build:hyperfy:from-source": "node scripts/build-hyperfy-from-source.js",
    "dev": "bun run build.ts --watch",
    "clean": "rm -rf dist && rm -rf .turbo",
    "lint": "eslint src --fix && prettier --write ./src",
    "typecheck": "tsc --noEmit",
    "test": "npm run test:all",
    "test:all": "node scripts/run-all-tests.js",
    "test:unit": "vitest run src/__tests__/core src/__tests__/apps src/__tests__/entities src/__tests__/systems --reporter=verbose",
    "test:integration": "vitest run src/__tests__/integration --reporter=verbose",
    "test:frontend": "vitest run src/__tests__/frontend --reporter=verbose",
    "test:e2e": "cypress run --config-file cypress.config.ts",
    "test:e2e:open": "cypress open --config-file cypress.config.ts",
    "test:agents": "vitest run src/__tests__/agents --reporter=verbose",
    "test:simulation": "vitest run src/__tests__/simulation --reporter=verbose",
    "test:performance": "node scripts/run-performance-tests.js",
    "test:watch": "vitest watch",
    "test:coverage": "vitest run --coverage",
    "test:tdd": "vitest watch --ui",
    "test:amongus": "npm run test:amongus:unit && npm run test:amongus:integration && npm run test:amongus:e2e",
    "test:amongus:unit": "vitest run src/__tests__/core/GameState.test.ts src/__tests__/core/PlayerMovement.test.ts",
    "test:amongus:integration": "vitest run src/__tests__/agents/RealAgentIntegration.test.ts",
    "test:amongus:e2e": "cypress run --spec cypress/e2e/hyperfy-amongus-real-test.cy.ts",
    "test:verify": "node scripts/verify-tdd-setup.js",
    "scenario:explore": "node scripts/run-autonomous-exploration.js",
    "scenario:explore:observe": "node scripts/run-autonomous-exploration.js --observe",
    "scenario:explore:quick": "elizaos scenario run scenarios/hyperfy-autonomous-exploration.ts",
    "rpg:test": "node scripts/run-rpg-comprehensive-test.js",
    "rpg:test:observe": "node scripts/run-rpg-comprehensive-test.js --observe",
    "rpg:test:quick": "node scripts/run-rpg-comprehensive-test.js --quick",
    "rpg:test:combat": "node scripts/run-rpg-comprehensive-test.js --phase combat",
    "rpg:test:skills": "node scripts/run-rpg-comprehensive-test.js --phase skills",
    "rpg:test:quests": "node scripts/run-rpg-comprehensive-test.js --phase quests",
    "rpg:test:economy": "node scripts/run-rpg-comprehensive-test.js --phase economy",
    "rpg:test:swarm": "node scripts/run-rpg-comprehensive-test.js --phase swarm",
    "test:content-pack": "node scripts/test-content-pack.js",
    "test:content-pack:mock": "node scripts/test-content-pack.js --mock",
    "test:visual": "vitest run src/__tests__/e2e/content-pack-integration.test.ts",
    "test:cypress": "cypress run --spec cypress/e2e/rpg-visual-tests.cy.ts",
    "minigames": "vite",
    "minigames:test": "node scripts/test-visual-minigames.js",
    "minigames:test:loop": "node scripts/minigames-test-loop.js",
    "minigames:test:quick": "node scripts/minigames-test-loop.js --quick",
    "minigames:test:resilient": "node scripts/resilient-test-loop.js",
    "minigames:test:resilient:quick": "node scripts/resilient-test-loop.js --quick",
    "minigames:test:game-loop": "node scripts/test-game-loop.js",
    "minigames:test:mafia-systems": "node scripts/test-mafia-systems.js",
    "minigames:verify": "node scripts/verify-minigames.js",
    "minigames:mafia": "bun scenarios/mafia-game-runner.ts",
    "minigames:amongus": "bun scenarios/among-us-runner.ts",
    "test:amongus-agents": "node scripts/test-among-us-agents.js",
    "demo:amongus": "node scripts/run-among-us-demo.js",
    "real:amongus": "tsx scenarios/among-us-eliza-runner.ts",
    "real:amongus:dev": "tsx watch scenarios/among-us-eliza-runner.ts",
    "real:amongus:launch": "node scripts/launch-real-amongus.js",
    "real:simple": "tsx simple-real-example.ts",
    "launch": "node scripts/launch-everything.js",
    "world:server": "node scripts/start-world-server.js",
    "observer": "vite --open /observer.html",
    "verify:gameplay": "node scripts/visual-verify-real-gameplay.js",
    "test:reality": "node scripts/check-real-gameplay.js",
    "test:world": "vitest run src/__tests__/e2e/hyperfy-real-world-test.ts",
    "test:e2e:manual": "node scripts/test-e2e-manual.js",
    "launch:hyperfy-amongus": "node scripts/launch-hyperfy-amongus.js",
    "test:hyperfy-amongus": "node scripts/test-hyperfy-amongus.js",
    "test:complete": "node scripts/run-complete-hyperfy-test.js",
    "agents:real": "node scripts/launch-real-hyperfy-agents.js",
    "validate": "node scripts/validate-hyperfy-implementation.js",
    "validate:hyperfy": "node scripts/validate-hyperfy-implementation.js",
    "complete:hyperfy": "node scripts/run-complete-hyperfy-test.js",
    "launch:agents": "node scripts/launch-real-hyperfy-agents.js",
    "demo:hyperfy": "node scripts/demo-hyperfy-amongus.js",
    "hyperfy:amongus": "node scripts/run-hyperfy-amongus-game.js",
    "test:runtime": "vite --port 3001 --open /runtime-test.html",
    "test:runtime:full": "node scripts/runtime-test-full.js",
    "test:validate": "npm run test && npm run test:runtime:full",
    "validate:comprehensive": "node scripts/comprehensive-validation.js",
    "server:amongus": "node scripts/start-amongus-server.js",
    "agents:amongus": "node scripts/launch-real-among-us-agents.js",
    "amongus:real": "npm run server:amongus & npm run agents:amongus",
    "test:real-implementation": "npm run validate:comprehensive && npm run test:runtime"
  },
  "publishConfig": {
    "access": "public"
  },
  "resolutions": {
    "zod": "3.25.67"
  },
  "agentConfig": {
    "pluginType": "elizaos:plugin:1.0.0",
    "pluginParameters": {
      "API_KEY": {
        "type": "string",
        "description": "API key for the service"
      }
    }
  },
  "gitHead": "d5bd5c43bfebeb7ac02f9e029f924cb6cd5c2ec7"
}
